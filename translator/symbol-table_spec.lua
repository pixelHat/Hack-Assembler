local SymbolTable = require("translator.symbol-table")

describe("Symbol table", function()
	describe("Default table", function()
		it("gets the Rs registers value", function()
			local symbol_table = SymbolTable.new()
			for i = 0, 15 do
				local register = symbol_table:get("R" .. i)
				assert.are_equals(register, i)
			end
		end)

		it("gets the SCREEN registers value", function()
			local symbol_table = SymbolTable.new()
			local screen = symbol_table:get("SCREEN")
			assert.are_equals(screen, 163384)
		end)

		it("gets the keyboard registers value", function()
			local symbol_table = SymbolTable.new()
			local kbd = symbol_table:get("KBD")
			assert.are_equals(kbd, 24576)
		end)

		it("gets the SP registers value", function()
			local symbol_table = SymbolTable.new()
			local sp = symbol_table:get("SP")
			assert.are_equals(sp, 0)
		end)

		it("gets the LCL registers value", function()
			local symbol_table = SymbolTable.new()
			local lcl = symbol_table:get("LCL")
			assert.are_equals(lcl, 1)
		end)

		it("gets the ARG registers value", function()
			local symbol_table = SymbolTable.new()
			local arg = symbol_table:get("ARG")
			assert.are_equals(arg, 2)
		end)

		it("gets the THIS registers value", function()
			local symbol_table = SymbolTable.new()
			local this = symbol_table:get("THIS")
			assert.are_equals(this, 3)
		end)

		it("gets the THAT registers value", function()
			local symbol_table = SymbolTable.new()
			local that = symbol_table:get("THAT")
			assert.are_equals(that, 4)
		end)
	end)

	describe("Labels", function()
		it("allows to set a label value", function()
			local symbol_table = SymbolTable.new()
			symbol_table:add_label("STOP", 0)
			local sut = symbol_table:get("STOP")
			assert.are_equals(sut, 0)
		end)
	end)

	describe("Variables", function()
		it("sets the value to 16 by default", function()
			local symbol_table = SymbolTable.new()
			local sut = symbol_table:get("i")
			assert.are_equals(sut, 16)
		end)

		it("sets the value to 16 plus number of variables already added", function()
			local symbol_table = SymbolTable.new()
			symbol_table:get("i")
			symbol_table:get("j")
			local sut = symbol_table:get("k")
			assert.are_equals(sut, 18)
		end)
	end)
end)
